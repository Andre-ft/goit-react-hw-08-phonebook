{"version":3,"sources":["components/Navigation.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","redux/auth/auth-slice.js","components/UserMenu/default-avatar.png","components/UserMenu/UserMenu.js","components/AuthNav.js","components/AppBar.js","redux/contacts/contactsSlice.js","components/Spinner/Spinner.js","components/ContactListItem/ContactListItem.jsx","contexts/context.js","components/ContactList/ContactList.jsx","redux/contacts/contacts-actions.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","redux/contacts/contacts-reducer.js","views/ContactView.js","views/HomeView.js","views/RegisterView.js","views/LoginView.js","components/Container/Container.js","App.js","redux/store.js","contexts/Provider.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactListItem/ContactListItem.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","views/ContactView.module.css","components/Container/Container.module.css"],"names":["styles","link","display","textDecoration","padding","fontWeight","color","activeLink","Navigation","to","exact","style","activeStyle","axios","defaults","baseURL","token","headers","common","Authorization","register","createAsyncThunk","credentials","a","post","data","logIn","logOut","fetchCurrentUser","_","thunkAPI","state","getState","persistedToken","auth","console","log","rejectWithValue","get","operations","authSelectors","getIsLoggedIn","isLoggedIn","getUsername","user","name","authSlice","createSlice","initialState","email","extraReducers","authOperations","fulfilled","action","payload","container","alignItems","avatar","marginRight","UserMenu","dispatch","useDispatch","useSelector","defaultAvatar","src","alt","width","type","onClick","AuthNav","header","justifyContent","borderBottom","AppBar","contactApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","fetchContacts","query","providesTags","deleteContact","mutation","contactId","url","method","invalidatesTags","createContact","body","number","useFetchContactsQuery","useDeleteContactMutation","useCreateContactMutation","spin","keyframes","Spinner","CgSpinner","defaultProps","size","ContactListItem","id","isDeleting","isLoading","className","s","contactList__item","deleteButton","disabled","createContext","ContactList","filter","useContext","Context","isFetching","arr","value","normalizedFilter","toLowerCase","contact","includes","getVisibleContacts","map","addContact","createAction","shortid","generate","changeFilter","fetchContactsSuccess","fetchContactsRequest","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","ContactForm","useState","setName","setNumber","btnEnable","setBtnEnable","nameInputId","isSuccess","numberInputId","handleChange","e","currentTarget","find","alert","checkName","containerStyle","duration","position","background","form","onSubmit","preventDefault","toast","htmlFor","input","pattern","title","required","onChange","button","Filter","setFilter","contactsOperations","message","description","todo","completed","then","catch","error","delete","getFilter","contacts","getItems","items","createSelector","createReducer","combineReducers","ContactView","useEffect","minHeight","fontSize","textAlign","HomeView","role","label","flexDirection","marginBottom","RegisterView","setEmail","password","setPassword","target","autoComplete","LoginView","Container","children","App","path","component","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","devTools","process","persistor","persistStore","Provider","providerValue","useMemo","ReactDOM","render","StrictMode","loading","document","getElementById","module","exports"],"mappings":"iOAGMA,EAAS,CACbC,KAAM,CACJC,QAAS,eACTC,eAAgB,OAChBC,QAAS,GACTC,WAAY,IACZC,MAAO,WAETC,WAAY,CACVD,MAAO,YAqBIE,EAjBI,kBACjB,gCACE,cAAC,IAAD,CAASC,GAAG,IAAIC,OAAK,EAACC,MAAOX,EAAOC,KAAMW,YAAaZ,EAAOO,WAA9D,wDAIA,cAAC,IAAD,CACEE,GAAG,YACHC,OAAK,EACLC,MAAOX,EAAOC,KACdW,YAAaZ,EAAOO,WAJtB,kE,iDCnBJM,IAAMC,SAASC,QAAU,wCAGzB,I,EAAMC,EAAQ,SACRA,GACFH,IAAMC,SAASG,QAAQC,OAAOC,cAA9B,iBAAwDH,IAFtDA,EAAQ,WAKVH,IAAMC,SAASG,QAAQC,OAAOC,cAAgB,IAS5CC,EAAWC,YAAiB,gBAAD,uCAAkB,WAAMC,GAAN,iBAAAC,EAAA,+EAExBV,IAAMW,KAAK,gBAAiBF,GAFJ,uBAEvCG,EAFuC,EAEvCA,KACRT,EAAUS,EAAKT,OAHgC,kBAIxCS,GAJwC,yFAAlB,uDAe3BC,EAAQL,YAAiB,aAAD,uCAAe,WAAMC,GAAN,iBAAAC,EAAA,+EAElBV,IAAMW,KAAK,eAAgBF,GAFT,uBAEjCG,EAFiC,EAEjCA,KACRT,EAAUS,EAAKT,OAH0B,kBAIlCS,GAJkC,yFAAf,uDAexBE,EAASN,YAAiB,cAAD,sBAAgB,sBAAAE,EAAA,+EAErCV,IAAMW,KAAK,iBAF0B,OAG3CR,IAH2C,wGAiBzCY,EAAmBP,YACvB,eADuC,uCAEvC,WAAOQ,EAAGC,GAAV,qBAAAP,EAAA,yDACQQ,EAAQD,EAASE,WAGA,QAFjBC,EAAiBF,EAAMG,KAAKlB,OAFpC,uBAKImB,QAAQC,IAAI,+HALhB,kBAMWN,EAASO,mBANpB,cASErB,EAAUiB,GATZ,kBAW2BpB,IAAMyB,IAAI,kBAXrC,uBAWYb,EAXZ,EAWYA,KACRU,QAAQC,IAAI,OAAQX,GAZxB,kBAaWA,GAbX,4FAFuC,yDA4B1Bc,EANI,CACjBnB,WACAO,SACAD,QACAE,oBCrFaY,EAJO,CACpBC,cALoB,SAAAV,GAAK,OAAIA,EAAMG,KAAKQ,YAMxCC,YAJkB,SAAAZ,GAAK,OAAIA,EAAMG,KAAKU,KAAKC,O,QCiC9BC,EA1BGC,YAAY,CAC5BF,KAAM,OACNG,aARmB,CACnBJ,KAAM,CAAEC,KAAM,KAAMI,MAAO,MAC3BjC,MAAO,KACP0B,YAAY,GAMZQ,eAAa,mBACVC,EAAe/B,SAASgC,WADd,SACyBrB,EAAOsB,GACzCtB,EAAMa,KAAOS,EAAOC,QAAQV,KAC5Bb,EAAMf,MAAQqC,EAAOC,QAAQtC,MAC7Be,EAAMW,YAAa,KAJV,cAMVS,EAAezB,MAAM0B,WANX,SAMsBrB,EAAOsB,GACtCtB,EAAMa,KAAOS,EAAOC,QAAQV,KAC5Bb,EAAMf,MAAQqC,EAAOC,QAAQtC,MAC7Be,EAAMW,YAAa,KATV,cAWVS,EAAexB,OAAOyB,WAXZ,SAWuBrB,EAAOsB,GACvCtB,EAAMa,KAAO,CAAEC,KAAM,KAAMI,MAAO,MAClClB,EAAMf,MAAQ,KACde,EAAMW,YAAa,KAdV,cAgBVS,EAAevB,iBAAiBwB,WAhBtB,SAgBiCrB,EAAOsB,GACjDtB,EAAMa,KAAOS,EAAOC,QACpBvB,EAAMW,YAAa,KAlBV,KAuBf,QCnCe,MAA0B,2CCInC1C,EAAS,CACbuD,UAAW,CACTrD,QAAS,OACTsD,WAAY,UAEdC,OAAQ,CACNC,YAAa,GAEfb,KAAM,CACJxC,WAAY,IACZqD,YAAa,KAIF,SAASC,IACtB,IAAMC,EAAWC,cACXhB,EAAOiB,YAAYtB,EAAcG,aACjCc,EAASM,EAEf,OACE,sBAAKpD,MAAOX,EAAOuD,UAAnB,UACE,qBAAKS,IAAKP,EAAQQ,IAAI,GAAGC,MAAM,KAAKvD,MAAOX,EAAOyD,SAClD,uBAAM9C,MAAOX,EAAO6C,KAApB,0GAA6CA,KAC7C,wBAAQsB,KAAK,SAASC,QAAS,kBAAMR,EAAST,EAAexB,WAA7D,+CCxBN,IAAM3B,EAAS,CACbC,KAAM,CACJC,QAAS,eACTC,eAAgB,OAChBC,QAAS,GACTC,WAAY,IACZC,MAAO,WAETC,WAAY,CACVD,MAAO,YAII,SAAS+D,IACtB,OACE,gCACE,cAAC,IAAD,CACE5D,GAAG,YACHC,OAAK,EACLC,MAAOX,EAAOC,KACdW,YAAaZ,EAAOO,WAJtB,gFAQA,cAAC,IAAD,CACEE,GAAG,SACHC,OAAK,EACLC,MAAOX,EAAOC,KACdW,YAAaZ,EAAOO,WAJtB,+CCrBN,IAAMP,EAAS,CACbsE,OAAQ,CACNpE,QAAS,OACTqE,eAAgB,gBAChBf,WAAY,SACZgB,aAAc,sBAIH,SAASC,IACtB,IAAM/B,EAAaoB,YAAYtB,EAAcC,eAC7C,OACE,yBAAQ9B,MAAOX,EAAOsE,OAAtB,UACE,cAAC,EAAD,IACC5B,EAAa,cAACiB,EAAD,IAAe,cAACU,EAAD,O,+CClBtBK,EAAaC,YAAU,CAClCC,YAAa,aACbC,UAAWC,YAAe,CACxBC,QAAS,wDAEXC,SAAU,CAAC,WACXC,UAAW,SAAAC,GAAO,MAAK,CACrBC,cAAeD,EAAQE,MAAM,CAC3BA,MAAO,iBAAM,aACbC,aAAc,CAAC,aAEjBC,cAAeJ,EAAQK,SAAS,CAC9BH,MAAO,SAAAI,GAAS,MAAK,CACnBC,IAAI,aAAD,OAAeD,GAClBE,OAAQ,WAEVC,gBAAiB,CAAC,aAEpBC,cAAeV,EAAQK,SAAS,CAC9BH,MAAO,kBAAuB,CAC5BK,IAAK,YACLC,OAAQ,OACRG,KAAM,CACJhD,KAJG,EAAGA,KAKNiD,OALG,EAASA,UAQhBH,gBAAiB,CAAC,iBAMtBI,EAGErB,EAHFqB,sBACAC,EAEEtB,EAFFsB,yBACAC,EACEvB,EADFuB,yB,wDCjCIC,GAAOC,YAAH,yGASGC,GAAU,YAAOC,IAAP,sBAAH,aACLH,GADK,2BAIpBE,GAAQE,aAAe,CACrBC,KAAM,ICZD,IAAMC,GAAkB,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,GAAI5D,EAAkB,EAAlBA,KAAMiD,EAAY,EAAZA,OACvC,EAAmDE,IAAnD,mBAAOV,EAAP,KAAmCoB,EAAnC,KAAwBC,UAExB,OACK,qBAAIC,UAAWC,IAAEC,kBAAjB,UACEjE,EADF,MACWiD,EACV,yBACE3B,KAAK,SACLyC,UAAWC,IAAEE,aACb3C,QAAS,kBAAMkB,EAAcmB,IAC7BO,SAAUN,EAJZ,UAMGA,GAAc,cAACN,GAAD,CAASG,KAAM,KANhC,gBCVKU,6BCKA,SAASC,KACtB,IAAQC,EAAWC,qBAAWC,IAAtBF,OACR,EAA6BpB,IAArBtE,EAAR,EAAQA,KAAR,EAAc6F,WAiBd,OAAQ,mCACN,oBAAIV,UAAWC,IAAEC,kBAAjB,SACGrF,GAjBsB,SAAC8F,EAAKC,GAC/B,IAAMC,EAAmBD,EAAME,cAE/B,OAAOH,EAAIJ,QAAO,SAAAQ,GAAO,OACvBA,EAAQ9E,KAAK6E,cAAcE,SAASH,MAa3BI,CAAmBpG,EAAM0F,GAAQW,KAAI,SAACH,GAAD,OAC5C,cAAE,GAAF,eAAuCA,GAAhBA,EAAQlB,W,4CC1B1BsB,GAAaC,YAAa,gBAAgB,gBAAGnF,EAAH,EAAGA,KAAMiD,EAAT,EAASA,OAAT,MAAuB,CAC5ExC,QAAS,CACPmD,GAAIwB,KAAQC,WACZrF,OACAiD,cAISR,GAAgB0C,YAAa,mBAE7BG,GAAeH,YAAa,yBAE5BI,GAAuBJ,YAClC,iCAEWK,GAAuBL,YAClC,iCAEWM,GAAqBN,YAAa,+BAElCO,GAAoBP,YAAa,8BACjCQ,GAAoBR,YAAa,8BACjCS,GAAkBT,YAAa,4BAE/BU,GAAuBV,YAClC,iCAEWW,GAAuBX,YAClC,iCAEWY,GAAqBZ,YAAa,+B,SCrBhC,SAASa,KAOpB,MAAwBC,mBAAS,IAAjC,mBAAOjG,EAAP,KAAakG,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAOhD,EAAP,KAAekD,EAAf,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAGF,EAA6BnD,IAArBtE,EAAR,EAAQA,KACR,GADA,EAAc6F,WACoCrB,KAAlD,mBAAOL,EAAP,YAAwBe,EAAxB,EAAwBA,UAKlBwC,GALN,EAAmCC,UAKfnB,KAAQC,YACtBmB,EAAgBpB,KAAQC,WAiBxBoB,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,cAAlB3G,EAAR,EAAQA,KAAM2E,EAAd,EAAcA,MAId,OAFS,SAAT3E,GAlBgB,SAACA,GAMjB,GAJcpB,GAAOA,EAAKgI,MACxB,SAAA9B,GAAO,OAAIA,EAAQ9E,KAAK6E,gBAAkB7E,EAAK6E,iBAM/C,OAFAwB,GAAa,QACbQ,MAAM,GAAD,OAAI7G,EAAJ,4BAIPqG,GAAa,GAMMS,CAAUnC,GAErB3E,GACN,IAAK,OAAQkG,EAAQvB,GACnB,MAEF,IAAK,SAAUwB,EAAUxB,KAQvBoC,EAAiB,CACrBC,SAAU,IACVC,SAAU,YACVnJ,MAAO,CACLoJ,WAAY,cAkBd,OAAQ,qCACN,cAAC,KAAD,IACA,uBAAMnD,UAAWC,KAAEmD,KAAMC,SAdR,SAAAV,GACnBA,EAAEW,iBACFC,aAAM,gBAAiBP,GAjDFhE,EAAc,CAAE/C,OAAMiD,WAqD3CiD,EAAQ,IACRC,EAAU,KAOR,UACE,wBAAOoB,QAASjB,EAAavC,UAAWC,KAAEwD,MAA1C,iBAEE,uBACElG,KAAK,OACLtB,KAAK,OACLyH,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRhD,MAAO3E,EACP4H,SAAUnB,EACV7C,GAAI0C,OAIR,wBAAOiB,QAASf,EAAezC,UAAWC,KAAEwD,MAA5C,mBAEE,uBACElG,KAAK,MACLtB,KAAK,SACLyH,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRhD,MAAO1B,EACP2E,SAAUnB,EACV7C,GAAI4C,OAGR,yBACElF,KAAK,SACLyC,UAAWC,KAAE6D,OACb1D,UAAWiC,GAAatC,EAH1B,UAKGA,GAAa,cAACP,GAAD,CAASG,KAAM,KAL/B,uB,wBC7GO,SAASoE,KACtB,MAA8BvD,qBAAWC,IAAjCF,EAAR,EAAQA,OAAQyD,EAAhB,EAAgBA,UAKhB,OACE,wBAAOhE,UAAWC,KAAEM,OAApB,kCAEE,uBAAOhD,KAAK,OAAOqD,MAAOL,EAAQsD,SAJrB,SAAClB,GAAD,OAAOqB,EAAUrB,EAAEC,cAAchC,a,2BCyC9CqD,GAAqB,CACzB1F,cAtCoB,yDAAM,WAAMvB,GAAN,iBAAArC,EAAA,6DAC1BqC,EAASyE,MADiB,kBAIDxH,IAAMyB,IAAI,UAJT,gBAIhBb,EAJgB,EAIhBA,KAERmC,EAASwE,GAAqB3G,IANN,gDAQxBmC,EAAS0E,GAAmB,KAAMwC,UARV,yDAAN,uDAuCpB/C,WA1BiB,SAAAgD,GAAW,OAAI,SAAAnH,GAChC,IAAMoH,EAAO,CACXD,cACAE,WAAW,GAGbrH,EAAS2E,MAET1H,IACGW,KAAK,SAAUwJ,GACfE,MAAK,gBAAGzJ,EAAH,EAAGA,KAAH,OAAcmC,EAAS4E,GAAkB/G,OAC9C0J,OAAM,SAAAC,GAAK,OAAIxH,EAAS6E,GAAgB2C,EAAMN,eAgBjDxF,cAZoB,SAAAE,GAAS,OAAI,SAAA5B,GACjCA,EAAS8E,MAET7H,IACGwK,OADH,iBACoB7F,IACjB0F,MAAK,kBAAMtH,EAAS+E,GAAqBnD,OACzC2F,OAAM,SAAAC,GAAK,OAAIxH,EAASgF,GAAmBwC,EAAMN,gBAQvCD,M,SCxDFS,GAAY,SAAAvJ,GAAK,OAAIA,EAAMwJ,SAASpE,QACpCqE,GAAW,SAAAzJ,GAAK,OAAIA,EAAMwJ,SAASE,O,IAiBdC,aAChC,CAACF,GAAUF,KACX,SAACC,EAAUpE,GACT,IAAMM,EAAmBN,EAAOO,cAChC,OAAO6D,EAASpE,QAAO,SAAAQ,GAAO,OAC5BA,EAAQ9E,KAAK6E,cAAcE,SAASH,S,eCJpCgE,GAAQE,YAAc,IAAD,qBACxB5D,IAAa,SAAChG,EAAD,OAAUuB,EAAV,EAAUA,QAAV,6BAA4BvB,GAA5B,CAAmCuB,OADxB,eAExBgC,IAAgB,SAACvD,EAAD,OAAUuB,EAAV,EAAUA,QAAV,OACfvB,EAAMoF,QAAO,qBAAGV,KAAgBnD,QAHT,KAgBrB6D,GAASwE,YAAc,GAAD,eACzBxD,IAAe,SAACtG,EAAD,YAAMyB,YAGTsI,aAAgB,CAC7BH,SACAtE,YCpCa,SAAS0E,KACtB,IAAMjI,EAAWC,cAIjB,OAFAiI,qBAAU,kBAAMlI,EAASiH,GAAmB1F,mBAAkB,CAACvB,IAG7D,sBAAKgD,UAAWC,KAAEgF,YAAlB,UACE,2CACA,cAAChD,GAAD,IAEA,0CACA,cAAC8B,GAAD,IACA,cAACzD,GAAD,OClBN,IAAMlH,GAAS,CACbuD,UAAW,CACTwI,UAAW,qBACX7L,QAAS,OACTsD,WAAY,SACZe,eAAgB,UAElBgG,MAAO,CACLlK,WAAY,IACZ2L,SAAU,GACVC,UAAW,WAeAC,GAXE,kBACf,qBAAKvL,MAAOX,GAAOuD,UAAnB,SACE,qBAAI5C,MAAOX,GAAOuK,MAAlB,kOACyC,IACvC,sBAAM4B,KAAK,MAAM,aAAW,0GAA5B,kDChBAnM,GAAS,CACbgK,KAAM,CACJ9F,MAAO,KAETkI,MAAO,CACLlM,QAAS,OACTmM,cAAe,SACfC,aAAc,KAIH,SAASC,KACtB,IAAM3I,EAAWC,cACjB,EAAwBiF,mBAAS,IAAjC,mBAAOjG,EAAP,KAAakG,EAAb,KACA,EAA0BD,mBAAS,IAAnC,mBAAO7F,EAAP,KAAcuJ,EAAd,KACA,EAAgC1D,mBAAS,IAAzC,mBAAO2D,EAAP,KAAiBC,EAAjB,KAEMpD,EAAe,SAAC,GAAiC,IAAD,IAA9BqD,OAAU9J,EAAoB,EAApBA,KAAM2E,EAAc,EAAdA,MACtC,OAAQ3E,GACN,IAAK,OACH,OAAOkG,EAAQvB,GACjB,IAAK,QACH,OAAOgF,EAAShF,GAClB,IAAK,WACH,OAAOkF,EAAYlF,GACrB,QACE,SAYN,OACE,gCACE,qJAEA,uBAAMyC,SAZW,SAAAV,GACnBA,EAAEW,iBACFtG,EAAST,EAAe/B,SAAS,CAAEyB,OAAMI,QAAOwJ,cAChD1D,EAAQ,IACRyD,EAAS,IACTE,EAAY,KAOoB/L,MAAOX,GAAOgK,KAAM4C,aAAa,MAA/D,UACE,wBAAOjM,MAAOX,GAAOoM,MAArB,+BAEE,uBAAOjI,KAAK,OAAOtB,KAAK,OAAO2E,MAAO3E,EAAM4H,SAAUnB,OAGxD,wBAAO3I,MAAOX,GAAOoM,MAArB,2CAEE,uBACEjI,KAAK,QACLtB,KAAK,QACL2E,MAAOvE,EACPwH,SAAUnB,OAId,wBAAO3I,MAAOX,GAAOoM,MAArB,iDAEE,uBACEjI,KAAK,WACLtB,KAAK,WACL2E,MAAOiF,EACPhC,SAAUnB,OAId,wBAAQnF,KAAK,SAAb,gICpER,IAAMnE,GAAS,CACbgK,KAAM,CACJ9F,MAAO,KAETkI,MAAO,CACLlM,QAAS,OACTmM,cAAe,SACfC,aAAc,KAIH,SAASO,KACtB,IAAMjJ,EAAWC,cACjB,EAA0BiF,mBAAS,IAAnC,mBAAO7F,EAAP,KAAcuJ,EAAd,KACA,EAAgC1D,mBAAS,IAAzC,mBAAO2D,EAAP,KAAiBC,EAAjB,KAEMpD,EAAe,SAAC,GAAiC,IAAD,IAA9BqD,OAAU9J,EAAoB,EAApBA,KAAM2E,EAAc,EAAdA,MACtC,OAAQ3E,GACN,IAAK,QACH,OAAO2J,EAAShF,GAClB,IAAK,WACH,OAAOkF,EAAYlF,GACrB,QACE,SAWN,OACE,gCACE,uHAEA,uBAAMyC,SAXW,SAAAV,GACnBA,EAAEW,iBACFtG,EAAST,EAAezB,MAAM,CAAEuB,QAAOwJ,cACvCD,EAAS,IACTE,EAAY,KAOoB/L,MAAOX,GAAOgK,KAAM4C,aAAa,MAA/D,UACE,wBAAOjM,MAAOX,GAAOoM,MAArB,2CAEE,uBACEjI,KAAK,QACLtB,KAAK,QACL2E,MAAOvE,EACPwH,SAAUnB,OAId,wBAAO3I,MAAOX,GAAOoM,MAArB,iDAEE,uBACEjI,KAAK,WACLtB,KAAK,WACL2E,MAAOiF,EACPhC,SAAUnB,OAId,wBAAQnF,KAAK,SAAb,kD,wBC7DO,SAAS2I,GAAT,GAAkC,IAAbC,EAAY,EAAZA,SAClC,OAAO,qBAAKnG,UAAW5G,KAAOuD,UAAvB,SAAmCwJ,ICQ7B,SAASC,KACtB,IAAMpJ,EAAWC,cAMjB,OAJAiI,qBAAU,WACRlI,EAAST,EAAevB,sBACvB,CAACgC,IAGF,eAACkJ,GAAD,WACE,cAACrI,EAAD,IAEA,eAAC,IAAD,WACE,cAAC,IAAD,CAAO/D,OAAK,EAACuM,KAAK,IAAIC,UAAWhB,KACjC,cAAC,IAAD,CAAOe,KAAK,YAAYC,UAAWX,KACnC,cAAC,IAAD,CAAOU,KAAK,SAASC,UAAWL,KAChC,cAAC,IAAD,CAAOI,KAAK,YAAYC,UAAWrB,W,wCC0CrCsB,GAAU,uBACXC,YAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,KAAOC,KAAWC,KAAOC,KAASC,KAAOC,UAHhD,CAMdlJ,EAAWyI,aAePU,GAAoB,CACxBC,IAAK,OACLC,aACAC,UAAW,CAAC,UAGDC,GAAQC,YAAe,CAClCC,QAAQ,aACNjM,KAAMkM,aAAeP,GAAmBQ,IACvC3J,EAAWE,YAAcF,EAAWyJ,SAEvChB,cACAmB,UAAUC,IAICC,GAAYC,aAAaR,ICtGvB,SAASS,GAAT,GAAiC,IAAb3B,EAAY,EAAZA,SACjC,EAA4BjE,mBAAS,IAArC,mBAAO3B,EAAP,KAAeyD,EAAf,KAaM+D,EAAgBC,mBAAQ,WAC5B,MAAO,CAAEzH,SAAQyD,eAChB,CAACA,EAAWzD,IAEf,OAAO,cAAC,GAAQuH,SAAT,CAAkBlH,MAAOmH,EAAzB,SAAyC5B,I,aCVlD8B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,UACE,cAAC,IAAD,CAAUd,MAAOA,GAAjB,SACE,cAAC,KAAD,CAAae,QAAS,KAAMR,UAAWA,GAAvC,SACE,cAAC,IAAD,UACE,cAACxB,GAAD,cAMViC,SAASC,eAAe,U,mBCtB1BC,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,OAAS,8B,mBCA/FD,EAAOC,QAAU,CAAC,kBAAoB,2CAA2C,aAAe,wC,mBCAhGD,EAAOC,QAAU,CAAC,kBAAoB,uCAAuC,aAAe,oC,mBCA5FD,EAAOC,QAAU,CAAC,OAAS,yB,mBCA3BD,EAAOC,QAAU,CAAC,YAAc,mC,mBCAhCD,EAAOC,QAAU,CAAC,UAAY,+B","file":"static/js/main.1d46ab6b.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst styles = {\n  link: {\n    display: 'inline-block',\n    textDecoration: 'none',\n    padding: 12,\n    fontWeight: 700,\n    color: '#2A363B',\n  },\n  activeLink: {\n    color: '#E84A5F',\n  },\n};\n\nconst Navigation = () => (\n  <nav>\n    <NavLink to=\"/\" exact style={styles.link} activeStyle={styles.activeLink}>\n      Главная\n    </NavLink>\n\n    <NavLink\n      to=\"/contacts\"\n      exact\n      style={styles.link}\n      activeStyle={styles.activeLink}\n    >\n      Контакты\n    </NavLink>\n  </nav>\n);\n\nexport default Navigation;\n","import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n// https://connections-api.herokuapp.com\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\n/*\n * POST @ /users/signup\n * body: { name, email, password }\n * После успешной регистрации добавляем токен в HTTP-заголовок\n */\nconst register = createAsyncThunk('auth/register', async credentials => {\n  try {\n    const { data } = await axios.post('/users/signup', credentials);\n    token.set(data.token);\n    return data;\n  } catch (error) {\n    // TODO: Добавить обработку ошибки error.message\n  }\n});\n\n/*\n * POST @ /users/login\n * body: { email, password }\n * После успешного логина добавляем токен в HTTP-заголовок\n */\nconst logIn = createAsyncThunk('auth/login', async credentials => {\n  try {\n    const { data } = await axios.post('/users/login', credentials);\n    token.set(data.token);\n    return data;\n  } catch (error) {\n    // TODO: Добавить обработку ошибки error.message\n  }\n});\n\n/*\n * POST @ /users/logout\n * headers: Authorization: Bearer token\n * После успешного логаута, удаляем токен из HTTP-заголовка\n */\nconst logOut = createAsyncThunk('auth/logout', async () => {\n  try {\n    await axios.post('/users/logout');\n    token.unset();\n  } catch (error) {\n    // TODO: Добавить обработку ошибки error.message\n  }\n});\n/*\n * GET @ /users/current\n * headers:\n *    Authorization: Bearer token\n *\n * 1. Забираем токен из стейта через getState()\n * 2. Если токена нет, выходим не выполняя никаких операций\n * 3. Если токен есть, добавляет его в HTTP-заголовок и выполянем операцию\n */\nconst fetchCurrentUser = createAsyncThunk(\n  'auth/refresh',\n  async (_, thunkAPI) => {\n    const state = thunkAPI.getState();\n    const persistedToken = state.auth.token;\n\n    if (persistedToken === null) {\n      console.log('Токена нет, уходим из fetchCurrentUser');\n      return thunkAPI.rejectWithValue();\n    }\n\n    token.set(persistedToken);\n    try {\n      const { data } = await axios.get('/users/current');\n      console.log('data', data);\n      return data;\n    } catch (error) {\n      // TODO: Добавить обработку ошибки error.message\n    }\n  },\n);\n\nconst operations = {\n  register,\n  logOut,\n  logIn,\n  fetchCurrentUser,\n};\nexport default operations;\n","const getIsLoggedIn = state => state.auth.isLoggedIn;\n\nconst getUsername = state => state.auth.user.name;\n\nconst authSelectors = {\n  getIsLoggedIn,\n  getUsername,\n};\nexport default authSelectors;\n","import { createSlice } from '@reduxjs/toolkit';\nimport authOperations from './auth-operations';\n\nconst initialState = {\n  user: { name: null, email: null },\n  token: null,\n  isLoggedIn: false,\n};\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  extraReducers: {\n    [authOperations.register.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [authOperations.logIn.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [authOperations.logOut.fulfilled](state, action) {\n      state.user = { name: null, email: null };\n      state.token = null;\n      state.isLoggedIn = false;\n    },\n    [authOperations.fetchCurrentUser.fulfilled](state, action) {\n      state.user = action.payload;\n      state.isLoggedIn = true;\n    },\n  },\n});\n\nexport default authSlice.reducer;\n","export default __webpack_public_path__ + \"static/media/default-avatar.e44fc4e2.png\";","import { useDispatch, useSelector } from 'react-redux';\nimport { authSelectors, authOperations } from '../../redux/auth';\nimport defaultAvatar from './default-avatar.png';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  avatar: {\n    marginRight: 4,\n  },\n  name: {\n    fontWeight: 700,\n    marginRight: 12,\n  },\n};\n\nexport default function UserMenu() {\n  const dispatch = useDispatch();\n  const name = useSelector(authSelectors.getUsername);\n  const avatar = defaultAvatar;\n\n  return (\n    <div style={styles.container}>\n      <img src={avatar} alt=\"\" width=\"32\" style={styles.avatar} />\n      <span style={styles.name}>Добро пожаловать, {name}</span>\n      <button type=\"button\" onClick={() => dispatch(authOperations.logOut())}>\n        Выйти\n      </button>\n    </div>\n  );\n}\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst styles = {\n  link: {\n    display: 'inline-block',\n    textDecoration: 'none',\n    padding: 12,\n    fontWeight: 700,\n    color: '#2A363B',\n  },\n  activeLink: {\n    color: '#E84A5F',\n  },\n};\n\nexport default function AuthNav() {\n  return (\n    <div>\n      <NavLink\n        to=\"/register\"\n        exact\n        style={styles.link}\n        activeStyle={styles.activeLink}\n      >\n        Регистрация\n      </NavLink>\n      <NavLink\n        to=\"/login\"\n        exact\n        style={styles.link}\n        activeStyle={styles.activeLink}\n      >\n        Логин\n      </NavLink>\n    </div>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport Navigation from './Navigation';\nimport UserMenu from './UserMenu';\nimport AuthNav from './AuthNav';\nimport { authSelectors } from '../redux/auth';\n\nconst styles = {\n  header: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    borderBottom: '1px solid #2A363B',\n  },\n};\n\nexport default function AppBar() {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  return (\n    <header style={styles.header}>\n      <Navigation />\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\n    </header>\n  );\n}\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\nexport const contactApi = createApi({\r\n  reducerPath: 'contactApi',\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl: 'https://61fe5bafa58a4e00173c97fc.mockapi.io/api/v1/',\r\n  }),\r\n  tagTypes: ['Contact'],\r\n  endpoints: builder => ({\r\n    fetchContacts: builder.query({\r\n      query: () => '/contacts',\r\n      providesTags: ['Contact'],\r\n    }),\r\n    deleteContact: builder.mutation({\r\n      query: contactId => ({\r\n        url: `/contacts/${contactId}`,\r\n        method: 'DELETE',\r\n      }),\r\n      invalidatesTags: ['Contact'],\r\n    }),\r\n    createContact: builder.mutation({\r\n      query: ({ name, number }) => ({\r\n        url: '/contacts',\r\n        method: 'POST',\r\n        body: {\r\n          name,\r\n          number,\r\n        },\r\n      }),\r\n      invalidatesTags: ['Contact'],\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useFetchContactsQuery,\r\n  useDeleteContactMutation,\r\n  useCreateContactMutation,\r\n} = contactApi;\r\n","import styled from '@emotion/styled/macro';\r\nimport { keyframes } from '@emotion/react';\r\nimport { CgSpinner } from 'react-icons/cg';\r\n\r\nconst spin = keyframes`\r\n0% {\r\n  transform: rotate(0deg);\r\n}\r\n100% {\r\n  transform: rotate(1turn);\r\n}\r\n`;\r\n\r\nexport const Spinner = styled(CgSpinner)`\r\n  animation: ${spin} 0.85s linear infinite;\r\n`;\r\n\r\nSpinner.defaultProps = {\r\n  size: 40,\r\n};\r\n","import React from 'react';\r\nimport s from './ContactListItem.module.css';\r\nimport { useFetchContactsQuery, useDeleteContactMutation } from '../../redux/contacts/contactsSlice';\r\nimport { Spinner } from '../Spinner/Spinner';\r\n\r\n\r\nexport const ContactListItem = ({id, name, number}) => {\r\n    const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\r\n\r\n    return (\r\n         <li className={s.contactList__item}>\r\n          {name} : {number}\r\n          <button\r\n            type=\"button\"\r\n            className={s.deleteButton}\r\n            onClick={() => deleteContact(id)}\r\n            disabled={isDeleting}\r\n          >\r\n            {isDeleting && <Spinner size={12} />}\r\n            Delete\r\n          </button>\r\n        </li>\r\n    )\r\n}","import { createContext } from 'react';\n\nexport default createContext();\n","import React, {useContext} from 'react';\nimport s from './ContactList.module.css';\nimport { useFetchContactsQuery, useDeleteContactMutation } from '../../redux/contacts/contactsSlice';\nimport { ContactListItem } from '../ContactListItem/ContactListItem';\nimport Context from '../../contexts/context';\n\n\nexport default function ContactList() {\n  const { filter } = useContext(Context);\n  const { data, isFetching } = useFetchContactsQuery();\n\n  const getVisibleContacts = (arr, value) => {\n    const normalizedFilter = value.toLowerCase();\n\n    return arr.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n  \n  // const contactList = useSelector(({ contacts: { filter, items } }) => getVisibleContacts(items, filter));\n  // const contactList = data;\n  // const contactList = getVisibleContacts(data, filter);\n  // const dispatch = useDispatch();\n  // const onDeleteContact = (id) => deleteContact(id);\n  \n\n  return (<>\n    <ul className={s.contactList__item}>\n      {data && getVisibleContacts(data, filter).map((contact) => (\n        < ContactListItem key={contact.id} {...contact} />\n      ))}\n    </ul>\n  </>)\n};","import { createAction } from '@reduxjs/toolkit';\r\nimport shortid from 'shortid';\r\n\r\nexport const addContact = createAction('contacts/add', ({ name, number }) => ({\r\n  payload: {\r\n    id: shortid.generate(),\r\n    name,\r\n    number,\r\n  },\r\n}));\r\n\r\nexport const deleteContact = createAction('contacts/delete');\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n\r\nexport const fetchContactsSuccess = createAction(\r\n  'contacts/fetchContactsSuccess',\r\n);\r\nexport const fetchContactsRequest = createAction(\r\n  'contacts/fetchContactsRequest',\r\n);\r\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction(\r\n  'contacts/deleteContactRequest',\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  'contacts/deleteContactSuccess',\r\n);\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n","import React, {  useState } from 'react';\nimport shortid from 'shortid';\nimport { connect, useSelector, useDispatch } from 'react-redux';\nimport s from './ContactForm.module.css';\nimport {addContact, deleteContact, changeFilter} from '../../redux/contacts/contacts-actions'\n// import { getItems } from '../../redux/contacts/contacts-selectors';\nimport { useFetchContactsQuery, useCreateContactMutation } from '../../redux/contacts/contactsSlice';\nimport { Spinner } from '../Spinner/Spinner';\nimport  toast, { Toaster }  from 'react-hot-toast';\n\n\n// function ContactForm({ onSubmit, contactList }) {\nexport default function ContactForm() {\n  // state = {\n    //   name: '',\n    //   number: '',\n    //   btnEnable: true,\n    // };\n    \n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n    const [btnEnable, setBtnEnable] = useState(true);\n    \n  // const contactList = useSelector(getItems);\n  const { data, isFetching } = useFetchContactsQuery();\n  const [createContact, { isLoading, isSuccess }] = useCreateContactMutation();\n  \n  // const dispatch = useDispatch();\n  const onSubmit = () => createContact({ name, number });\n  \n  const nameInputId = shortid.generate();\n  const numberInputId = shortid.generate();\n\n  const checkName = (name) => {\n    \n    const check = data ? data.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    ) : false;\n\n    if (check) {\n      setBtnEnable(false);\n      alert(`${name} is already in contacts`);\n      return;\n    }\n\n    setBtnEnable(true);\n  }\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n\n    name === 'name' && checkName(value);\n\n    switch (name) {\n      case 'name': setName(value);        \n        break;\n\n      case 'number': setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const containerStyle = {\n    duration: 3000,\n    position: 'top-right',\n    style: {\n      background: 'lawngreen',\n      // top: 5,\n      // right: 5,\n    },\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    toast('Contact added', containerStyle);\n\n    onSubmit({name, number});\n    \n    setName('');\n    setNumber('');\n\n  };\n\n\n    return (<>\n      <Toaster />\n      <form className={s.form} onSubmit={handleSubmit}>\n        <label htmlFor={nameInputId} className={s.input}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            value={name}\n            onChange={handleChange}\n            id={nameInputId}\n          />\n        </label>\n\n        <label htmlFor={numberInputId} className={s.input}>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            value={number}\n            onChange={handleChange}\n            id={numberInputId}\n          />\n        </label>\n        <button\n          type=\"submit\"\n          className={s.button}\n          disabled={!btnEnable || isLoading}\n        >\n          {isLoading && <Spinner size={12} />}\n          Add contact\n        </button>\n      </form>\n      </>\n    );\n}\n\n// export default ContactForm;\n\n// const mapStateToProps = state =>{\n//  return {\n//    contactList: state.contacts.items,\n\n//  }\n// }\n// const mapDispatchToProps = dispatch => {\n// return {\n//     onSubmit: ({name, number}) => dispatch(addContact({name, number}))\n//   }\n// }\n// export default connect(mapStateToProps, mapDispatchToProps)(ContactForm);","import React, {  useState, useContext } from 'react';\nimport { changeFilter } from '../../redux/contacts/contacts-actions';\nimport { connect, useSelector, useDispatch } from 'react-redux';\n// import { getFilter } from '../../redux/contacts';\nimport Context from '../../contexts/context';\nimport s from './Filter.module.css';\n\n\nexport default function Filter() {\n  const { filter, setFilter } = useContext(Context)\n  // const [value, setValue] = useState('')\n  // const value = useSelector(getFilter);\n  // const dispatch = useDispatch();\n  const onChange = (e) => setFilter(e.currentTarget.value);\n  return (\n    <label className={s.filter}>\n      Find contacts by name\n      <input type=\"text\" value={filter} onChange={onChange} />\n    </label>\n  );\n};\n\n// export default Filter;\n\n// const mapStateToProps = state => ({\n//   value: state.contacts.filter\n// })\n\n// const mapDispatchToProps = dispatch => {\n//   return {\n//     onChange: (e)=> dispatch(changeFilter(e.currentTarget.value))\n//   }\n// }\n\n// export default connect(mapStateToProps, mapDispatchToProps)(Filter);","import axios from 'axios';\r\nimport {\r\n  //   deleteContact,\r\n  //   addContact,\r\n  //   changeFilter,\r\n  fetchContactsSuccess,\r\n  fetchContactsRequest,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from './contacts-actions';\r\n\r\n// GET @ /tasks\r\nconst fetchContacts = () => async dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n\r\n  try {\r\n    const { data } = await axios.get('/tasks');\r\n\r\n    dispatch(fetchContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactsError(error.message));\r\n  }\r\n};\r\n\r\n// POST @ /tasks\r\nconst addContact = description => dispatch => {\r\n  const todo = {\r\n    description,\r\n    completed: false,\r\n  };\r\n\r\n  dispatch(addContactRequest());\r\n\r\n  axios\r\n    .post('/tasks', todo)\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch(error => dispatch(addContactError(error.message)));\r\n};\r\n\r\n// DELETE @ /tasks/:id\r\nconst deleteContact = contactId => dispatch => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`/tasks/${contactId}`)\r\n    .then(() => dispatch(deleteContactSuccess(contactId)))\r\n    .catch(error => dispatch(deleteContactError(error.message)));\r\n};\r\n\r\nconst contactsOperations = {\r\n  fetchContacts,\r\n  addContact,\r\n  deleteContact,\r\n};\r\nexport default contactsOperations;\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getLoading = state => state.contacts.loading;\r\nexport const getFilter = state => state.contacts.filter;\r\nexport const getItems = state => state.contacts.items;\r\n\r\n// export const getVisibleContacts = state => {\r\n//   const allContacts = getItems(state);\r\n//   const filter = getFilter(state);\r\n//   const normalizedFilter = filter.toLowerCase();\r\n\r\n//   return allContacts.filter(contact =>\r\n//     contact.name.toLowerCase().includes(normalizedFilter),\r\n//   );\r\n// };\r\n\r\nexport const getTotalContactsCount = state => {\r\n  const contacts = getItems(state);\r\n  return contacts.length;\r\n};\r\n\r\nexport const getVisibleContacts = createSelector(\r\n  [getItems, getFilter],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  },\r\n);\r\n\r\nconst contactsSelectors = {\r\n  getLoading,\r\n  getFilter,\r\n  getVisibleContacts,\r\n  getTotalContactsCount,\r\n};\r\nexport default contactsSelectors;\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { addContact, deleteContact, changeFilter } from './contacts-actions';\r\n// import types from './contacts-types';\r\n\r\n// const filter = createReducer('', {\r\n//   [changeFilter]: (_, { payload }) => payload,\r\n// });\r\n\r\n// const items = (state = [], { type, payload }) => {\r\n//   switch (type) {\r\n//     case types.ADD:\r\n//       return [...state, payload];\r\n\r\n//     case types.DELETE:\r\n//       return state.filter(({ id }) => id !== payload);\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\nconst items = createReducer([], {\r\n  [addContact]: (state, { payload }) => [...state, payload],\r\n  [deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\n// const filter = (state = '', { type, payload }) => {\r\n//   switch (type) {\r\n//     case types.CHANGE_FILTER:\r\n//       return payload;\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import React, { useState, useEffect } from 'react';\r\nimport ContactList from '../components/ContactList';\r\nimport ContactForm from '../components/ContactForm';\r\nimport Filter from '../components/Filter';\r\nimport s from './ContactView.module.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { contactsOperations, contactsSelectors } from '../redux/contacts';\r\n\r\nexport default function ContactView() {\r\n  const dispatch = useDispatch();\r\n  //   const isLoadingContacts = useSelector(contactsSelectors.getLoading);\r\n  useEffect(() => dispatch(contactsOperations.fetchContacts()), [dispatch]);\r\n\r\n  return (\r\n    <div className={s.ContactView}>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm />\r\n\r\n      <h2>Contacts</h2>\r\n      <Filter />\r\n      <ContactList />\r\n      {/* {isLoadingContacts && <h1>Loading...</h1>} */}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\n\nconst styles = {\n  container: {\n    minHeight: 'calc(100vh - 50px)',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    fontWeight: 500,\n    fontSize: 48,\n    textAlign: 'center',\n  },\n};\n\nconst HomeView = () => (\n  <div style={styles.container}>\n    <h1 style={styles.title}>\n      Приветственная страница нашего сервиса{' '}\n      <span role=\"img\" aria-label=\"Иконка приветствия\">\n        💁‍♀️\n      </span>\n    </h1>\n  </div>\n);\n\nexport default HomeView;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from '../redux/auth';\n\nconst styles = {\n  form: {\n    width: 320,\n  },\n  label: {\n    display: 'flex',\n    flexDirection: 'column',\n    marginBottom: 15,\n  },\n};\n\nexport default function RegisterView() {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(authOperations.register({ name, email, password }));\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <div>\n      <h1>Страница регистрации</h1>\n\n      <form onSubmit={handleSubmit} style={styles.form} autoComplete=\"off\">\n        <label style={styles.label}>\n          Имя\n          <input type=\"text\" name=\"name\" value={name} onChange={handleChange} />\n        </label>\n\n        <label style={styles.label}>\n          Почта\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n          />\n        </label>\n\n        <label style={styles.label}>\n          Пароль\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n          />\n        </label>\n\n        <button type=\"submit\">Зарегистрироваться</button>\n      </form>\n    </div>\n  );\n}\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from '../redux/auth';\n\nconst styles = {\n  form: {\n    width: 320,\n  },\n  label: {\n    display: 'flex',\n    flexDirection: 'column',\n    marginBottom: 15,\n  },\n};\n\nexport default function LoginView() {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(authOperations.logIn({ email, password }));\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <div>\n      <h1>Страница логина</h1>\n\n      <form onSubmit={handleSubmit} style={styles.form} autoComplete=\"off\">\n        <label style={styles.label}>\n          Почта\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n          />\n        </label>\n\n        <label style={styles.label}>\n          Пароль\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n          />\n        </label>\n\n        <button type=\"submit\">Войти</button>\n      </form>\n    </div>\n  );\n}\n","import styles from './Container.module.css';\n\nexport default function Container({ children }) {\n  return <div className={styles.container}>{children}</div>;\n}\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Switch, Route } from 'react-router-dom';\nimport AppBar from './components/AppBar';\nimport ContactView from './views/ContactView';\nimport HomeView from './views/HomeView';\nimport RegisterView from './views/RegisterView';\nimport LoginView from './views/LoginView';\nimport Container from './components/Container';\nimport { authOperations } from './redux/auth';\n\nexport default function App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(authOperations.fetchCurrentUser());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <AppBar />\n\n      <Switch>\n        <Route exact path=\"/\" component={HomeView} />\n        <Route path=\"/register\" component={RegisterView} />\n        <Route path=\"/login\" component={LoginView} />\n        <Route path=\"/contacts\" component={ContactView} />\n      </Switch>\n    </Container>\n  );\n}\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { setupListeners } from '@reduxjs/toolkit/query';\r\nimport { contactApi } from './contacts/contactsSlice';\r\nimport { authReducer } from './auth';\r\n\r\n// const initialState = {\r\n//   contacts: {\r\n//     items: [],\r\n//     filter: '',\r\n//   },\r\n// };\r\n\r\n// const contactsPersistConfig = {\r\n//   key: 'contacts',\r\n//   storage,\r\n//   blacklist: ['filter'],\r\n// };\r\n\r\n// const rootReducer = combineReducers({\r\n//   contacts: persistReducer(persistConfig, contactReducer),\r\n// });\r\n\r\n// const persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\n// const itemsReducer = (state = [], { type, payload }) => {\r\n//   switch (type) {\r\n//     case ADD:\r\n//       return [...state, payload];\r\n\r\n//     case DELETE:\r\n//       return state.filter(({ id }) => id !== payload);\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// const filterReducer = (state = '', { type, payload }) => {\r\n//   switch (type) {\r\n//     case CHANGE_FILTER:\r\n//       return payload;\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// const contactReducer = combineReducers({\r\n//   items: itemsReducer,\r\n//   filter: filterReducer,\r\n// });\r\n\r\n// const rootReducer = combineReducers({ contacts: contactReducer });\r\n\r\n// const store = createStore(rootReducer, composeWithDevTools());\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  contactApi.middleware,\r\n  // logger,\r\n];\r\n\r\n// const store = configureStore({\r\n//   reducer: {\r\n//     contacts: persistReducer(contactsPersistConfig, contactReducer),\r\n//   },\r\n//   middleware,\r\n//   devTools: process.env.NODE_ENV === 'development',\r\n// });\r\n\r\n// const persistor = persistStore(store);\r\n\r\n// export default { store, persistor };\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    [contactApi.reducerPath]: contactApi.reducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\n// setupListeners(store.dispatch);\r\nexport const persistor = persistStore(store);\r\n","import { useState, useMemo } from 'react';\nimport Context from './context';\n\nexport default function Provider({ children }) {\n  const [filter, setFilter] = useState('');\n  // const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  // const onLogIn = () => {\n  //   setUser({ name: 'Манго', avatar });\n  //   setIsLoggedIn(true);\n  // };\n\n  // const onLogOut = () => {\n  //   setUser(null);\n  //   setIsLoggedIn(false);\n  // };\n\n  const providerValue = useMemo(() => {\n    return { filter, setFilter };\n  }, [setFilter, filter]);\n\n  return <Context.Provider value={providerValue}>{children}</Context.Provider>;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store, persistor } from './redux/store';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n// import 'react-toastify/dist/ReactToastify.css';\nimport ContextProvider from './contexts/Provider';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ContextProvider>\n      <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n          <BrowserRouter>\n            <App />\n          </BrowserRouter>\n        </PersistGate>\n      </Provider>\n    </ContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2-q5N\",\"input\":\"ContactForm_input__1382s\",\"button\":\"ContactForm_button__OBqyM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList__item\":\"ContactListItem_contactList__item__fGcDN\",\"deleteButton\":\"ContactListItem_deleteButton__JUaaW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList__item\":\"ContactList_contactList__item__1gMCN\",\"deleteButton\":\"ContactList_deleteButton__Hv83B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1FN7R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactView\":\"ContactView_ContactView__2-nbT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3cLWK\"};"],"sourceRoot":""}